#!/bin/zsh

# profile file. Runs on login. Environmental variables are set here.

# Platform variable
UNAME="$(uname -s)"
export UNAME

# Use GNU Coreutils on macOS
if [ "$UNAME" = "Darwin" ] && [ -d "/opt/homebrew/opt/diffutils/bin" ]; then
    export PATH="/opt/homebrew/opt/diffutils/bin:$PATH"
fi
if [ "$UNAME" = "Darwin" ] && [ -d "/opt/homebrew/opt/coreutils/libexec/gnubin" ]; then
    export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
fi

# Adds `~/.local/bin` to $PATH
if [ -d "$HOME/.local/bin" ]; then
    PATH="$PATH$(find "$HOME/.local/bin" -type d | awk '{  printf ":%s", $1; }')"
    export PATH
fi

# Add RubyGems to path
if [ -d "$HOME/.gem/ruby" ]; then
    PATH="$PATH$(find "$HOME/.gem/ruby" -type d -depth 1 | awk '{  printf ":%s/bin", $1; }')"
    export PATH
fi

# Default editor:
if [ -x "$(command -v nvim)" ]; then
    export EDITOR="nvim"
elif [ -x "$(command -v vim)" ]; then
    export EDITOR="vim"
elif [ -x "$(command -v vi)" ]; then
    export EDITOR="vi"
fi

# Use GnuPG as ssh-agent & clean up gpg home
export GNUPGHOME="${XDG_DATA_HOME:-$HOME/.local/share}/gnupg"
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ] && [ -x "$(command -v gpgconf)" ]; then
  SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
  export SSH_AUTH_SOCK
fi

# ~/ Clean-up:
if [ -z "$XDG_CONFIG_HOME" ]; then
    export XDG_CONFIG_HOME="$HOME/.config"
fi

if [ -z "$XDG_DATA_HOME" ]; then
    export XDG_DATA_HOME="$HOME/.local/share"
fi

if [ -z "$XDG_CACHE_HOME" ]; then
    export XDG_CACHE_HOME="$HOME/.cache"
fi

if [ -z "$XDG_RUNTIME_DIR" ]; then
    export XDG_RUNTIME_DIR="$XDG_CACHE_HOME"
fi

export GTK2_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc-2.0"
export LESSHISTFILE="-"
export WGETRC="${XDG_CONFIG_HOME:-$HOME/.config}/wget/wgetrc"
export INPUTRC="${XDG_CONFIG_HOME:-$HOME/.config}/shell/inputrc"
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
export WINEPREFIX="${XDG_DATA_HOME:-$HOME/.local/share}/wineprefixes/default"
export TMUX_TMPDIR="${XDG_RUNTIME_DIR}"
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export GOPATH="${XDG_DATA_HOME:-$HOME/.local/share}/go"
export ANSIBLE_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/ansible/ansible.cfg"
export HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/history"
export KUBECONFIG="${XDG_DATA_HOME:-$HOME/.local/share}/kube"
export SQLITE_HISTORY="${XDG_CACHE_HOME:-$HOME/.cache}/sqlite_history"

export AWS_CONFIG_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/aws/config"
export AWS_SHARED_CREDENTIALS_FILE="${XDG_DATA_HOME:-$HOME/.local/share}/aws/credentials"

# Other program settings:
export FZF_DEFAULT_OPTS="--layout=reverse --height 40%"
export SYSTEMD_LESS="j.25MqRSW#.25"
export LESS=-R
LESS_TERMCAP_mb="$(printf '%b' '[1;31m')"
export LESS_TERMCAP_mb
LESS_TERMCAP_md="$(printf '%b' '[1;36m')"
export LESS_TERMCAP_md
LESS_TERMCAP_me="$(printf '%b' '[0m')"
export LESS_TERMCAP_me
LESS_TERMCAP_so="$(printf '%b' '[01;44;33m')"
export LESS_TERMCAP_so
LESS_TERMCAP_se="$(printf '%b' '[0m')"
export LESS_TERMCAP_se
LESS_TERMCAP_us="$(printf '%b' '[1;32m')"
export LESS_TERMCAP_us
LESS_TERMCAP_ue="$(printf '%b' '[0m')"
export LESS_TERMCAP_ue
export LESSOPEN="| highlight -O ansi %s 2>/dev/null"
